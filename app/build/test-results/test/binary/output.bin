Character recognized
Operator recognized
Operator stack: [+]
Operator stack not empty
Postfix: [+]
Operator recognized
Too small stack: []
Double recognized
Output queue: [4.0]
Character recognized
Operator recognized
Operator stack: [^]
Double recognized
Output queue: [4.0, 2.0]
Operator stack not empty
Postfix: [4.0, 2.0, ^]
Double recognized
"Stack after pushing double: [4.0]
Double recognized
'Stack after pushing double: [2.0, 4.0]
Operator recognized
Number22.0
Number14.0
[16.0]
Double recognized
Output queue: [2.0]
Character recognized
Operator recognized
Operator stack: [^]
Double recognized
Output queue: [2.0, 4.0]
Operator stack not empty
Postfix: [2.0, 4.0, ^]
Double recognized
"Stack after pushing double: [2.0]
Double recognized
'Stack after pushing double: [4.0, 2.0]
Operator recognized
Number24.0
Number12.0
[16.0]
Double recognized
Output queue: [2.0]
Character recognized
Operator recognized
Operator stack: [^]
Double recognized
Output queue: [2.0, 2.0]
Character recognized
Operator recognized
Operator stack: [^, ^]
Double recognized
Output queue: [2.0, 2.0, 2.0]
Operator stack not empty
Operator stack not empty
Postfix: [2.0, 2.0, 2.0, ^, ^]
Double recognized
"Stack after pushing double: [2.0]
Double recognized
'Stack after pushing double: [2.0, 2.0]
Double recognized
,Stack after pushing double: [2.0, 2.0, 2.0]
Operator recognized
Number22.0
Number12.0
[4.0, 2.0]
Operator recognized
Number24.0
Number12.0
[16.0]
Double recognized
Output queue: [4.0]
Character recognized
Operator recognized
Operator stack: [^]
Double recognized
Output queue: [4.0, 16.0]
Character recognized
Operator recognized
Operator stack: [^, ^]
Double recognized
 Output queue: [4.0, 16.0, 0.25]
Operator stack not empty
Operator stack not empty
!Postfix: [4.0, 16.0, 0.25, ^, ^]
Double recognized
"Stack after pushing double: [4.0]
Double recognized
(Stack after pushing double: [16.0, 4.0]
Double recognized
.Stack after pushing double: [0.25, 16.0, 4.0]
Operator recognized
Number20.25
Number116.0
[2.0, 4.0]
Operator recognized
Number22.0
Number14.0
[16.0]
Double recognized
Output queue: [65536.0]
Character recognized
Operator recognized
Operator stack: [^]
Double recognized
Output queue: [65536.0, 0.5]
Character recognized
Operator recognized
Operator stack: [^, ^]
Double recognized
"Output queue: [65536.0, 0.5, 2.0]
Operator stack not empty
Operator stack not empty
#Postfix: [65536.0, 0.5, 2.0, ^, ^]
Double recognized
&Stack after pushing double: [65536.0]
Double recognized
+Stack after pushing double: [0.5, 65536.0]
Double recognized
0Stack after pushing double: [2.0, 0.5, 65536.0]
Operator recognized
Number22.0
Number10.5
[0.25, 65536.0]
Operator recognized
Number20.25
Number165536.0
[16.0]
Character recognized
Operator stack: [(]
Double recognized
Output queue: [3.0]
Character recognized
Operator recognized
Operator stack: [+, (]
Double recognized
Output queue: [3.0, 1.0]
Character recognized
Character recognized
Operator recognized
Operator stack: [^]
Character recognized
Operator stack: [(, ^]
Double recognized
!Output queue: [3.0, 1.0, +, 5.0]
Character recognized
Operator recognized
Operator stack: [-, (, ^]
Double recognized
&Output queue: [3.0, 1.0, +, 5.0, 3.0]
Character recognized
Operator stack not empty
'Postfix: [3.0, 1.0, +, 5.0, 3.0, -, ^]
Double recognized
"Stack after pushing double: [3.0]
Double recognized
'Stack after pushing double: [1.0, 3.0]
Operator recognized
Number21.0
Number13.0
[4.0]
Double recognized
'Stack after pushing double: [5.0, 4.0]
Double recognized
,Stack after pushing double: [3.0, 5.0, 4.0]
Operator recognized
Number23.0
Number15.0
[2.0, 4.0]
Operator recognized
Number22.0
Number14.0
[16.0]
Double recognized
Output queue: [6.0]
Character recognized
Operator recognized
Operator stack: [+]
Double recognized
Output queue: [6.0, 3.0]
Character recognized
Operator recognized
Operator stack: [^, +]
Double recognized
Output queue: [6.0, 3.0, 3.0]
Character recognized
Operator recognized
!Output queue: [6.0, 3.0, 3.0, ^]
$Output queue: [6.0, 3.0, 3.0, ^, +]
Operator stack: [-]
Double recognized
*Output queue: [6.0, 3.0, 3.0, ^, +, 17.0]
Operator stack not empty
(Postfix: [6.0, 3.0, 3.0, ^, +, 17.0, -]
Double recognized
"Stack after pushing double: [6.0]
Double recognized
'Stack after pushing double: [3.0, 6.0]
Double recognized
,Stack after pushing double: [3.0, 3.0, 6.0]
Operator recognized
Number23.0
Number13.0
[27.0, 6.0]
Operator recognized
Number227.0
Number16.0
[33.0]
Double recognized
)Stack after pushing double: [17.0, 33.0]
Operator recognized
Number217.0
Number133.0
[16.0]
Character recognized
Operator stack: [(]
Double recognized
Output queue: [20.0]
Character recognized
Operator recognized
Operator stack: [*, (]
Double recognized
Output queue: [20.0, 0.2]
Character recognized
Character recognized
Operator recognized
Operator stack: [^]
Character recognized
Operator stack: [(, ^]
Double recognized
#Output queue: [20.0, 0.2, *, 10.0]
Character recognized
Operator recognized
Operator stack: [/, (, ^]
Double recognized
(Output queue: [20.0, 0.2, *, 10.0, 5.0]
Character recognized
Operator stack not empty
)Postfix: [20.0, 0.2, *, 10.0, 5.0, /, ^]
Double recognized
#Stack after pushing double: [20.0]
Double recognized
(Stack after pushing double: [0.2, 20.0]
Operator recognized
Number20.2
Number120.0
[4.0]
Double recognized
(Stack after pushing double: [10.0, 4.0]
Double recognized
-Stack after pushing double: [5.0, 10.0, 4.0]
Operator recognized
Number25.0
Number110.0
[2.0, 4.0]
Operator recognized
Number22.0
Number14.0
[16.0]
Double recognized
Output queue: [40.0]
Character recognized
Operator recognized
Operator stack: [*]
Double recognized
Output queue: [40.0, 6.0]
Character recognized
Operator recognized
Operator stack: [^, *]
Double recognized
Output queue: [40.0, 6.0, 3.0]
Character recognized
Operator recognized
"Output queue: [40.0, 6.0, 3.0, ^]
%Output queue: [40.0, 6.0, 3.0, ^, *]
Operator stack: [/]
Double recognized
,Output queue: [40.0, 6.0, 3.0, ^, *, 540.0]
Operator stack not empty
*Postfix: [40.0, 6.0, 3.0, ^, *, 540.0, /]
Double recognized
#Stack after pushing double: [40.0]
Double recognized
(Stack after pushing double: [6.0, 40.0]
Double recognized
-Stack after pushing double: [3.0, 6.0, 40.0]
Operator recognized
Number23.0
Number16.0
[216.0, 40.0]
Operator recognized
Number2216.0
Number140.0
	[8640.0]
Double recognized
,Stack after pushing double: [540.0, 8640.0]
Operator recognized
Number2540.0
Number18640.0
[16.0]
Character recognized
Operator stack: [(]
Double recognized
Output queue: [7.0]
Character recognized
Postfix: [7.0]
Double recognized
"Stack after pushing double: [7.0]
Character recognized
Operator stack: [(]
Character recognized
Operator stack: [(, (]
Character recognized
Operator stack: [(, (, (]
Double recognized
Output queue: [7.0]
Character recognized
Character recognized
Character recognized
Postfix: [7.0]
Double recognized
"Stack after pushing double: [7.0]
Character recognized
Operator stack: [(]
Double recognized
Output queue: [5.0]
Character recognized
Operator recognized
Operator stack: [+, (]
Double recognized
Output queue: [5.0, 2.0]
Character recognized
Postfix: [5.0, 2.0, +]
Double recognized
"Stack after pushing double: [5.0]
Double recognized
'Stack after pushing double: [2.0, 5.0]
Operator recognized
Number22.0
Number15.0
[7.0]
Character recognized
Operator stack: [(]
Double recognized
Output queue: [2.0]
Character recognized
Operator recognized
Operator stack: [+, (]
Double recognized
Output queue: [2.0, 3.0]
Character recognized
Character recognized
Operator recognized
Operator stack: [+]
Double recognized
!Output queue: [2.0, 3.0, +, 2.0]
Operator stack not empty
Postfix: [2.0, 3.0, +, 2.0, +]
Double recognized
"Stack after pushing double: [2.0]
Double recognized
'Stack after pushing double: [3.0, 2.0]
Operator recognized
Number23.0
Number12.0
[5.0]
Double recognized
'Stack after pushing double: [2.0, 5.0]
Operator recognized
Number22.0
Number15.0
[7.0]
Double recognized
Output queue: [2.0]
Character recognized
Operator recognized
Operator stack: [+]
Character recognized
Operator stack: [(, +]
Double recognized
Output queue: [2.0, 3.0]
Character recognized
Operator recognized
Operator stack: [+, (, +]
Double recognized
Output queue: [2.0, 3.0, 2.0]
Character recognized
Operator stack not empty
Postfix: [2.0, 3.0, 2.0, +, +]
Double recognized
"Stack after pushing double: [2.0]
Double recognized
'Stack after pushing double: [3.0, 2.0]
Double recognized
,Stack after pushing double: [2.0, 3.0, 2.0]
Operator recognized
Number22.0
Number13.0
[5.0, 2.0]
Operator recognized
Number25.0
Number12.0
[7.0]
Character recognized
Operator stack: [(]
Character recognized
Operator stack: [(, (]
Double recognized
Output queue: [2.0]
Character recognized
Operator recognized
Operator stack: [+, (, (]
Double recognized
Output queue: [2.0, 1.0]
Character recognized
Character recognized
Operator recognized
Operator stack: [+, (]
Character recognized
Operator stack: [(, +, (]
Double recognized
!Output queue: [2.0, 1.0, +, 1.0]
Character recognized
Operator recognized
Operator stack: [+, (, +, (]
Double recognized
&Output queue: [2.0, 1.0, +, 1.0, 3.0]
Character recognized
Character recognized
'Postfix: [2.0, 1.0, +, 1.0, 3.0, +, +]
Double recognized
"Stack after pushing double: [2.0]
Double recognized
'Stack after pushing double: [1.0, 2.0]
Operator recognized
Number21.0
Number12.0
[3.0]
Double recognized
'Stack after pushing double: [1.0, 3.0]
Double recognized
,Stack after pushing double: [3.0, 1.0, 3.0]
Operator recognized
Number23.0
Number11.0
[4.0, 3.0]
Operator recognized
Number24.0
Number13.0
[7.0]
Character recognized
Operator stack: [(]
Double recognized
Output queue: [15.0]
Character recognized
Operator recognized
Operator stack: [-, (]
Double recognized
Output queue: [15.0, 6.0]
Character recognized
Character recognized
Operator recognized
Operator stack: [-]
Double recognized
"Output queue: [15.0, 6.0, -, 2.0]
Operator stack not empty
 Postfix: [15.0, 6.0, -, 2.0, -]
Double recognized
#Stack after pushing double: [15.0]
Double recognized
(Stack after pushing double: [6.0, 15.0]
Operator recognized
Number26.0
Number115.0
[9.0]
Double recognized
'Stack after pushing double: [2.0, 9.0]
Operator recognized
Number22.0
Number19.0
[7.0]
Double recognized
Output queue: [15.0]
Character recognized
Operator recognized
Operator stack: [-]
Character recognized
Operator stack: [(, -]
Double recognized
Output queue: [15.0, 10.0]
Character recognized
Operator recognized
Operator stack: [-, (, -]
Double recognized
 Output queue: [15.0, 10.0, 2.0]
Character recognized
Operator stack not empty
!Postfix: [15.0, 10.0, 2.0, -, -]
Double recognized
#Stack after pushing double: [15.0]
Double recognized
)Stack after pushing double: [10.0, 15.0]
Double recognized
.Stack after pushing double: [2.0, 10.0, 15.0]
Operator recognized
Number22.0
Number110.0
[8.0, 15.0]
Operator recognized
Number28.0
Number115.0
[7.0]
Character recognized
Operator stack: [(]
Double recognized
Output queue: [3.5]
Character recognized
Operator recognized
Operator stack: [*, (]
Double recognized
Output queue: [3.5, 4.0]
Character recognized
Character recognized
Operator recognized
Operator stack: [*]
Double recognized
!Output queue: [3.5, 4.0, *, 0.5]
Operator stack not empty
Postfix: [3.5, 4.0, *, 0.5, *]
Double recognized
"Stack after pushing double: [3.5]
Double recognized
'Stack after pushing double: [4.0, 3.5]
Operator recognized
Number24.0
Number13.5
[14.0]
Double recognized
(Stack after pushing double: [0.5, 14.0]
Operator recognized
Number20.5
Number114.0
[7.0]
Double recognized
Output queue: [0.5]
Character recognized
Operator recognized
Operator stack: [*]
Character recognized
Operator stack: [(, *]
Double recognized
Output queue: [0.5, 4.0]
Character recognized
Operator recognized
Operator stack: [*, (, *]
Double recognized
Output queue: [0.5, 4.0, 3.5]
Character recognized
Operator stack not empty
Postfix: [0.5, 4.0, 3.5, *, *]
Double recognized
"Stack after pushing double: [0.5]
Double recognized
'Stack after pushing double: [4.0, 0.5]
Double recognized
,Stack after pushing double: [3.5, 4.0, 0.5]
Operator recognized
Number23.5
Number14.0
[14.0, 0.5]
Operator recognized
Number214.0
Number10.5
[7.0]
Double recognized
Output queue: [70.0]
Character recognized
Operator recognized
Operator stack: [/]
Character recognized
Operator stack: [(, /]
Double recognized
Output queue: [70.0, 100.0]
Character recognized
Operator recognized
Operator stack: [/, (, /]
Double recognized
"Output queue: [70.0, 100.0, 10.0]
Character recognized
Operator stack not empty
#Postfix: [70.0, 100.0, 10.0, /, /]
Double recognized
#Stack after pushing double: [70.0]
Double recognized
*Stack after pushing double: [100.0, 70.0]
Double recognized
0Stack after pushing double: [10.0, 100.0, 70.0]
Operator recognized
Number210.0
Number1100.0
[10.0, 70.0]
Operator recognized
Number210.0
Number170.0
[7.0]
Character recognized
Operator stack: [(]
Double recognized
Output queue: [42.0]
Character recognized
Operator recognized
Operator stack: [/, (]
Double recognized
Output queue: [42.0, 2.0]
Character recognized
Character recognized
Operator recognized
Operator stack: [/]
Double recognized
"Output queue: [42.0, 2.0, /, 3.0]
Operator stack not empty
 Postfix: [42.0, 2.0, /, 3.0, /]
Double recognized
#Stack after pushing double: [42.0]
Double recognized
(Stack after pushing double: [2.0, 42.0]
Operator recognized
Number22.0
Number142.0
[21.0]
Double recognized
(Stack after pushing double: [3.0, 21.0]
Operator recognized
Number23.0
Number121.0
[7.0]
Character recognized
Operator stack: [(]
Double recognized
Output queue: [11.0]
Character recognized
Operator recognized
Operator stack: [+, (]
Double recognized
Output queue: [11.0, 3.0]
Character recognized
Character recognized
Operator recognized
Operator stack: [/]
Double recognized
"Output queue: [11.0, 3.0, +, 2.0]
Operator stack not empty
 Postfix: [11.0, 3.0, +, 2.0, /]
Double recognized
#Stack after pushing double: [11.0]
Double recognized
(Stack after pushing double: [3.0, 11.0]
Operator recognized
Number23.0
Number111.0
[14.0]
Double recognized
(Stack after pushing double: [2.0, 14.0]
Operator recognized
Number22.0
Number114.0
[7.0]
Double recognized
Output queue: [0.1]
Character recognized
Operator recognized
Operator stack: [*]
Character recognized
Operator stack: [(, *]
Double recognized
Output queue: [0.1, 35.0]
Character recognized
Operator recognized
Operator stack: [+, (, *]
Double recognized
 Output queue: [0.1, 35.0, 35.0]
Character recognized
Operator stack not empty
!Postfix: [0.1, 35.0, 35.0, +, *]
Double recognized
"Stack after pushing double: [0.1]
Double recognized
(Stack after pushing double: [35.0, 0.1]
Double recognized
.Stack after pushing double: [35.0, 35.0, 0.1]
Operator recognized
Number235.0
Number135.0
[70.0, 0.1]
Operator recognized
Number270.0
Number10.1
[7.0]
Double recognized
Output queue: [70.0]
Character recognized
Operator recognized
Operator stack: [/]
Character recognized
Operator stack: [(, /]
Double recognized
Output queue: [70.0, 13.0]
Character recognized
Operator recognized
Operator stack: [-, (, /]
Double recognized
 Output queue: [70.0, 13.0, 8.0]
Character recognized
Character recognized
Operator recognized
&Output queue: [70.0, 13.0, 8.0, -, /]
Operator stack: [/]
Double recognized
+Output queue: [70.0, 13.0, 8.0, -, /, 2.0]
Operator stack not empty
)Postfix: [70.0, 13.0, 8.0, -, /, 2.0, /]
Double recognized
#Stack after pushing double: [70.0]
Double recognized
)Stack after pushing double: [13.0, 70.0]
Double recognized
.Stack after pushing double: [8.0, 13.0, 70.0]
Operator recognized
Number28.0
Number113.0
[5.0, 70.0]
Operator recognized
Number25.0
Number170.0
[14.0]
Double recognized
(Stack after pushing double: [2.0, 14.0]
Operator recognized
Number22.0
Number114.0
[7.0]
Character recognized
Operator stack: [(]
Double recognized
Output queue: [9.0]
Character recognized
Operator recognized
Operator stack: [-, (]
Double recognized
Output queue: [9.0, 1.0]
Character recognized
Operator recognized
Output queue: [9.0, 1.0, -]
Operator stack: [-, (]
Double recognized
!Output queue: [9.0, 1.0, -, 1.0]
Character recognized
Postfix: [9.0, 1.0, -, 1.0, -]
Double recognized
"Stack after pushing double: [9.0]
Double recognized
'Stack after pushing double: [1.0, 9.0]
Operator recognized
Number21.0
Number19.0
[8.0]
Double recognized
'Stack after pushing double: [1.0, 8.0]
Operator recognized
Number21.0
Number18.0
[7.0]
Character recognized
Operator stack: [(]
Double recognized
Output queue: [9.0]
Character recognized
Character recognized
Operator recognized
Operator stack: [-]
Character recognized
Operator stack: [(, -]
Double recognized
Output queue: [9.0, 2.0]
Character recognized
Operator stack not empty
Postfix: [9.0, 2.0, -]
Double recognized
"Stack after pushing double: [9.0]
Double recognized
'Stack after pushing double: [2.0, 9.0]
Operator recognized
Number22.0
Number19.0
[7.0]
Character recognized
Operator stack: [(]
Character recognized
Operator stack: [(, (]
Character recognized
Operator stack: [(, (, (]
Character recognized
Operator stack: [(, (, (, (]
Character recognized
 Operator stack: [(, (, (, (, (]
Double recognized
Output queue: [1.0]
Character recognized
Operator recognized
#Operator stack: [+, (, (, (, (, (]
Double recognized
Output queue: [1.0, 2.0]
Character recognized
Character recognized
Operator recognized
 Operator stack: [*, (, (, (, (]
Double recognized
!Output queue: [1.0, 2.0, +, 3.0]
Character recognized
Character recognized
Operator recognized
Operator stack: [-, (, (, (]
Double recognized
)Output queue: [1.0, 2.0, +, 3.0, *, 1.0]
Character recognized
Character recognized
Operator recognized
Operator stack: [/, (, (]
Double recognized
1Output queue: [1.0, 2.0, +, 3.0, *, 1.0, -, 4.0]
Character recognized
Character recognized
Operator recognized
Operator stack: [+, (]
Double recognized
9Output queue: [1.0, 2.0, +, 3.0, *, 1.0, -, 4.0, /, 5.0]
Character recognized
7Postfix: [1.0, 2.0, +, 3.0, *, 1.0, -, 4.0, /, 5.0, +]
Double recognized
"Stack after pushing double: [1.0]
Double recognized
'Stack after pushing double: [2.0, 1.0]
Operator recognized
Number22.0
Number11.0
[3.0]
Double recognized
'Stack after pushing double: [3.0, 3.0]
Operator recognized
Number23.0
Number13.0
[9.0]
Double recognized
'Stack after pushing double: [1.0, 9.0]
Operator recognized
Number21.0
Number19.0
[8.0]
Double recognized
'Stack after pushing double: [4.0, 8.0]
Operator recognized
Number24.0
Number18.0
[2.0]
Double recognized
'Stack after pushing double: [5.0, 2.0]
Operator recognized
Number25.0
Number12.0
[7.0]
Character recognized
Operator stack: [(]
Double recognized
Output queue: [7.0]
Character recognized
Operator recognized
Operator stack: [*, (]
Character recognized
Operator stack: [(, *, (]
Double recognized
Output queue: [7.0, 5.0]
Character recognized
Operator recognized
Operator stack: [-, (, *, (]
Character recognized
 Operator stack: [(, -, (, *, (]
Double recognized
Output queue: [7.0, 5.0, 4.0]
Character recognized
Operator recognized
#Operator stack: [*, (, -, (, *, (]
Character recognized
&Operator stack: [(, *, (, -, (, *, (]
Double recognized
#Output queue: [7.0, 5.0, 4.0, 5.0]
Character recognized
Operator recognized
)Operator stack: [-, (, *, (, -, (, *, (]
Character recognized
,Operator stack: [(, -, (, *, (, -, (, *, (]
Double recognized
(Output queue: [7.0, 5.0, 4.0, 5.0, 4.0]
Character recognized
Operator recognized
/Operator stack: [*, (, -, (, *, (, -, (, *, (]
Character recognized
2Operator stack: [(, *, (, -, (, *, (, -, (, *, (]
Double recognized
-Output queue: [7.0, 5.0, 4.0, 5.0, 4.0, 5.0]
Character recognized
Operator recognized
5Operator stack: [-, (, *, (, -, (, *, (, -, (, *, (]
Double recognized
2Output queue: [7.0, 5.0, 4.0, 5.0, 4.0, 5.0, 4.0]
Character recognized
Character recognized
Character recognized
Character recognized
Character recognized
Character recognized
?Postfix: [7.0, 5.0, 4.0, 5.0, 4.0, 5.0, 4.0, -, *, -, *, -, *]
Double recognized
"Stack after pushing double: [7.0]
Double recognized
'Stack after pushing double: [5.0, 7.0]
Double recognized
,Stack after pushing double: [4.0, 5.0, 7.0]
Double recognized
1Stack after pushing double: [5.0, 4.0, 5.0, 7.0]
Double recognized
6Stack after pushing double: [4.0, 5.0, 4.0, 5.0, 7.0]
Double recognized
;Stack after pushing double: [5.0, 4.0, 5.0, 4.0, 5.0, 7.0]
Double recognized
@Stack after pushing double: [4.0, 5.0, 4.0, 5.0, 4.0, 5.0, 7.0]
Operator recognized
Number24.0
Number15.0
[1.0, 4.0, 5.0, 4.0, 5.0, 7.0]
Operator recognized
Number21.0
Number14.0
[4.0, 5.0, 4.0, 5.0, 7.0]
Operator recognized
Number24.0
Number15.0
[1.0, 4.0, 5.0, 7.0]
Operator recognized
Number21.0
Number14.0
[4.0, 5.0, 7.0]
Operator recognized
Number24.0
Number15.0
[1.0, 7.0]
Operator recognized
Number21.0
Number17.0
[7.0]
Character recognized
Operator stack: [(]
Double recognized
Output queue: [5.0]
Character recognized
Operator recognized
Operator stack: [*, (]
Character recognized
Operator stack: [(, *, (]
Double recognized
Output queue: [5.0, 1.0]
Character recognized
Operator recognized
Operator stack: [+, (, *, (]
Character recognized
 Operator stack: [(, +, (, *, (]
Character recognized
#Operator stack: [(, (, +, (, *, (]
Character recognized
&Operator stack: [(, (, (, +, (, *, (]
Double recognized
Output queue: [5.0, 1.0, 7.0]
Character recognized
Operator recognized
)Operator stack: [-, (, (, (, +, (, *, (]
Double recognized
#Output queue: [5.0, 1.0, 7.0, 4.0]
Character recognized
Character recognized
Operator recognized
&Operator stack: [*, (, (, +, (, *, (]
Character recognized
)Operator stack: [(, *, (, (, +, (, *, (]
Double recognized
+Output queue: [5.0, 1.0, 7.0, 4.0, -, 1.0]
Character recognized
Operator recognized
,Operator stack: [+, (, *, (, (, +, (, *, (]
Double recognized
0Output queue: [5.0, 1.0, 7.0, 4.0, -, 1.0, 3.0]
Character recognized
Character recognized
Character recognized
Operator recognized
#Operator stack: [-, (, +, (, *, (]
Character recognized
&Operator stack: [(, -, (, +, (, *, (]
Character recognized
)Operator stack: [(, (, -, (, +, (, *, (]
Double recognized
;Output queue: [5.0, 1.0, 7.0, 4.0, -, 1.0, 3.0, +, *, 6.0]
Character recognized
Operator recognized
,Operator stack: [+, (, (, -, (, +, (, *, (]
Double recognized
@Output queue: [5.0, 1.0, 7.0, 4.0, -, 1.0, 3.0, +, *, 6.0, 9.0]
Character recognized
Character recognized
Operator recognized
)Operator stack: [/, (, -, (, +, (, *, (]
Character recognized
,Operator stack: [(, /, (, -, (, +, (, *, (]
Double recognized
HOutput queue: [5.0, 1.0, 7.0, 4.0, -, 1.0, 3.0, +, *, 6.0, 9.0, +, 7.0]
Character recognized
Operator recognized
/Operator stack: [-, (, /, (, -, (, +, (, *, (]
Double recognized
MOutput queue: [5.0, 1.0, 7.0, 4.0, -, 1.0, 3.0, +, *, 6.0, 9.0, +, 7.0, 2.0]
Character recognized
Character recognized
Character recognized
Character recognized
Operator recognized
YOutput queue: [5.0, 1.0, 7.0, 4.0, -, 1.0, 3.0, +, *, 6.0, 9.0, +, 7.0, 2.0, -, /, -, +]
Operator stack: [-, (, *, (]
Double recognized
^Output queue: [5.0, 1.0, 7.0, 4.0, -, 1.0, 3.0, +, *, 6.0, 9.0, +, 7.0, 2.0, -, /, -, +, 3.0]
Character recognized
Character recognized
Operator recognized
dOutput queue: [5.0, 1.0, 7.0, 4.0, -, 1.0, 3.0, +, *, 6.0, 9.0, +, 7.0, 2.0, -, /, -, +, 3.0, -, *]
Operator stack: [/, (]
Double recognized
iOutput queue: [5.0, 1.0, 7.0, 4.0, -, 1.0, 3.0, +, *, 6.0, 9.0, +, 7.0, 2.0, -, /, -, +, 3.0, -, *, 0.2]
Character recognized
Character recognized
Operator recognized
Operator stack: [/]
Double recognized
rOutput queue: [5.0, 1.0, 7.0, 4.0, -, 1.0, 3.0, +, *, 6.0, 9.0, +, 7.0, 2.0, -, /, -, +, 3.0, -, *, 0.2, /, 25.0]
Operator stack not empty
pPostfix: [5.0, 1.0, 7.0, 4.0, -, 1.0, 3.0, +, *, 6.0, 9.0, +, 7.0, 2.0, -, /, -, +, 3.0, -, *, 0.2, /, 25.0, /]
Double recognized
"Stack after pushing double: [5.0]
Double recognized
'Stack after pushing double: [1.0, 5.0]
Double recognized
,Stack after pushing double: [7.0, 1.0, 5.0]
Double recognized
1Stack after pushing double: [4.0, 7.0, 1.0, 5.0]
Operator recognized
Number24.0
Number17.0
[3.0, 1.0, 5.0]
Double recognized
1Stack after pushing double: [1.0, 3.0, 1.0, 5.0]
Double recognized
6Stack after pushing double: [3.0, 1.0, 3.0, 1.0, 5.0]
Operator recognized
Number23.0
Number11.0
[4.0, 3.0, 1.0, 5.0]
Operator recognized
Number24.0
Number13.0
[12.0, 1.0, 5.0]
Double recognized
2Stack after pushing double: [6.0, 12.0, 1.0, 5.0]
Double recognized
7Stack after pushing double: [9.0, 6.0, 12.0, 1.0, 5.0]
Operator recognized
Number29.0
Number16.0
[15.0, 12.0, 1.0, 5.0]
Double recognized
8Stack after pushing double: [7.0, 15.0, 12.0, 1.0, 5.0]
Double recognized
=Stack after pushing double: [2.0, 7.0, 15.0, 12.0, 1.0, 5.0]
Operator recognized
Number22.0
Number17.0
[5.0, 15.0, 12.0, 1.0, 5.0]
Operator recognized
Number25.0
Number115.0
[3.0, 12.0, 1.0, 5.0]
Operator recognized
Number23.0
Number112.0
[9.0, 1.0, 5.0]
Operator recognized
Number29.0
Number11.0
[10.0, 5.0]
Double recognized
-Stack after pushing double: [3.0, 10.0, 5.0]
Operator recognized
Number23.0
Number110.0
[7.0, 5.0]
Operator recognized
Number27.0
Number15.0
[35.0]
Double recognized
(Stack after pushing double: [0.2, 35.0]
Operator recognized
Number20.2
Number135.0
[175.0]
Double recognized
*Stack after pushing double: [25.0, 175.0]
Operator recognized
Number225.0
Number1175.0
[7.0]
Double recognized
Output queue: [6.0]
Character recognized
Operator recognized
Operator stack: [+]
Double recognized
Output queue: [6.0, 1.0]
Operator stack not empty
Postfix: [6.0, 1.0, +]
Double recognized
"Stack after pushing double: [6.0]
Double recognized
'Stack after pushing double: [1.0, 6.0]
Operator recognized
Number21.0
Number16.0
[7.0]
Double recognized
Output queue: [2.0]
Character recognized
Operator recognized
Operator stack: [+]
Double recognized
Output queue: [2.0, 3.0]
Character recognized
Operator recognized
Output queue: [2.0, 3.0, +]
Operator stack: [+]
Double recognized
!Output queue: [2.0, 3.0, +, 2.0]
Operator stack not empty
Postfix: [2.0, 3.0, +, 2.0, +]
Double recognized
"Stack after pushing double: [2.0]
Double recognized
'Stack after pushing double: [3.0, 2.0]
Operator recognized
Number23.0
Number12.0
[5.0]
Double recognized
'Stack after pushing double: [2.0, 5.0]
Operator recognized
Number22.0
Number15.0
[7.0]
Double recognized
Output queue: [1.0]
Character recognized
Operator recognized
Operator stack: [+]
Double recognized
Output queue: [1.0, 1.0]
Character recognized
Operator recognized
Output queue: [1.0, 1.0, +]
Operator stack: [+]
Double recognized
!Output queue: [1.0, 1.0, +, 1.0]
Character recognized
Operator recognized
$Output queue: [1.0, 1.0, +, 1.0, +]
Operator stack: [+]
Double recognized
)Output queue: [1.0, 1.0, +, 1.0, +, 1.0]
Character recognized
Operator recognized
,Output queue: [1.0, 1.0, +, 1.0, +, 1.0, +]
Operator stack: [+]
Double recognized
1Output queue: [1.0, 1.0, +, 1.0, +, 1.0, +, 1.0]
Character recognized
Operator recognized
4Output queue: [1.0, 1.0, +, 1.0, +, 1.0, +, 1.0, +]
Operator stack: [+]
Double recognized
9Output queue: [1.0, 1.0, +, 1.0, +, 1.0, +, 1.0, +, 1.0]
Character recognized
Operator recognized
<Output queue: [1.0, 1.0, +, 1.0, +, 1.0, +, 1.0, +, 1.0, +]
Operator stack: [+]
Double recognized
AOutput queue: [1.0, 1.0, +, 1.0, +, 1.0, +, 1.0, +, 1.0, +, 1.0]
Operator stack not empty
?Postfix: [1.0, 1.0, +, 1.0, +, 1.0, +, 1.0, +, 1.0, +, 1.0, +]
Double recognized
"Stack after pushing double: [1.0]
Double recognized
'Stack after pushing double: [1.0, 1.0]
Operator recognized
Number21.0
Number11.0
[2.0]
Double recognized
'Stack after pushing double: [1.0, 2.0]
Operator recognized
Number21.0
Number12.0
[3.0]
Double recognized
'Stack after pushing double: [1.0, 3.0]
Operator recognized
Number21.0
Number13.0
[4.0]
Double recognized
'Stack after pushing double: [1.0, 4.0]
Operator recognized
Number21.0
Number14.0
[5.0]
Double recognized
'Stack after pushing double: [1.0, 5.0]
Operator recognized
Number21.0
Number15.0
[6.0]
Double recognized
'Stack after pushing double: [1.0, 6.0]
Operator recognized
Number21.0
Number16.0
[7.0]
Double recognized
Output queue: [10.0]
Character recognized
Operator recognized
Operator stack: [-]
Double recognized
Output queue: [10.0, 3.0]
Operator stack not empty
Postfix: [10.0, 3.0, -]
Double recognized
#Stack after pushing double: [10.0]
Double recognized
(Stack after pushing double: [3.0, 10.0]
Operator recognized
Number23.0
Number110.0
[7.0]
Double recognized
Output queue: [15.0]
Character recognized
Operator recognized
Operator stack: [-]
Double recognized
Output queue: [15.0, 6.0]
Character recognized
Operator recognized
Output queue: [15.0, 6.0, -]
Operator stack: [-]
Double recognized
"Output queue: [15.0, 6.0, -, 2.0]
Operator stack not empty
 Postfix: [15.0, 6.0, -, 2.0, -]
Double recognized
#Stack after pushing double: [15.0]
Double recognized
(Stack after pushing double: [6.0, 15.0]
Operator recognized
Number26.0
Number115.0
[9.0]
Double recognized
'Stack after pushing double: [2.0, 9.0]
Operator recognized
Number22.0
Number19.0
[7.0]
Double recognized
Output queue: [12.0]
Character recognized
Operator recognized
Operator stack: [-]
Double recognized
Output queue: [12.0, 1.0]
Character recognized
Operator recognized
Output queue: [12.0, 1.0, -]
Operator stack: [-]
Double recognized
"Output queue: [12.0, 1.0, -, 1.0]
Character recognized
Operator recognized
%Output queue: [12.0, 1.0, -, 1.0, -]
Operator stack: [-]
Double recognized
*Output queue: [12.0, 1.0, -, 1.0, -, 1.0]
Character recognized
Operator recognized
-Output queue: [12.0, 1.0, -, 1.0, -, 1.0, -]
Operator stack: [-]
Double recognized
2Output queue: [12.0, 1.0, -, 1.0, -, 1.0, -, 1.0]
Character recognized
Operator recognized
5Output queue: [12.0, 1.0, -, 1.0, -, 1.0, -, 1.0, -]
Operator stack: [-]
Double recognized
:Output queue: [12.0, 1.0, -, 1.0, -, 1.0, -, 1.0, -, 1.0]
Operator stack not empty
8Postfix: [12.0, 1.0, -, 1.0, -, 1.0, -, 1.0, -, 1.0, -]
Double recognized
#Stack after pushing double: [12.0]
Double recognized
(Stack after pushing double: [1.0, 12.0]
Operator recognized
Number21.0
Number112.0
[11.0]
Double recognized
(Stack after pushing double: [1.0, 11.0]
Operator recognized
Number21.0
Number111.0
[10.0]
Double recognized
(Stack after pushing double: [1.0, 10.0]
Operator recognized
Number21.0
Number110.0
[9.0]
Double recognized
'Stack after pushing double: [1.0, 9.0]
Operator recognized
Number21.0
Number19.0
[8.0]
Double recognized
'Stack after pushing double: [1.0, 8.0]
Operator recognized
Number21.0
Number18.0
[7.0]
Double recognized
Output queue: [7.0]
Character recognized
Operator recognized
Operator stack: [*]
Double recognized
Output queue: [7.0, 1.0]
Operator stack not empty
Postfix: [7.0, 1.0, *]
Double recognized
"Stack after pushing double: [7.0]
Double recognized
'Stack after pushing double: [1.0, 7.0]
Operator recognized
Number21.0
Number17.0
[7.0]
Double recognized
Output queue: [0.2]
Character recognized
Operator recognized
Operator stack: [*]
Double recognized
Output queue: [0.2, 35.0]
Operator stack not empty
Postfix: [0.2, 35.0, *]
Double recognized
"Stack after pushing double: [0.2]
Double recognized
(Stack after pushing double: [35.0, 0.2]
Operator recognized
Number235.0
Number10.2
[7.0]
Double recognized
Output queue: [7.0]
Character recognized
Operator recognized
Operator stack: [*]
Double recognized
Output queue: [7.0, 1.0]
Character recognized
Operator recognized
Output queue: [7.0, 1.0, *]
Operator stack: [*]
Double recognized
!Output queue: [7.0, 1.0, *, 1.0]
Character recognized
Operator recognized
$Output queue: [7.0, 1.0, *, 1.0, *]
Operator stack: [*]
Double recognized
)Output queue: [7.0, 1.0, *, 1.0, *, 1.0]
Character recognized
Operator recognized
,Output queue: [7.0, 1.0, *, 1.0, *, 1.0, *]
Operator stack: [*]
Double recognized
1Output queue: [7.0, 1.0, *, 1.0, *, 1.0, *, 1.0]
Character recognized
Operator recognized
4Output queue: [7.0, 1.0, *, 1.0, *, 1.0, *, 1.0, *]
Operator stack: [*]
Double recognized
9Output queue: [7.0, 1.0, *, 1.0, *, 1.0, *, 1.0, *, 1.0]
Character recognized
Operator recognized
<Output queue: [7.0, 1.0, *, 1.0, *, 1.0, *, 1.0, *, 1.0, *]
Operator stack: [*]
Double recognized
AOutput queue: [7.0, 1.0, *, 1.0, *, 1.0, *, 1.0, *, 1.0, *, 1.0]
Operator stack not empty
?Postfix: [7.0, 1.0, *, 1.0, *, 1.0, *, 1.0, *, 1.0, *, 1.0, *]
Double recognized
"Stack after pushing double: [7.0]
Double recognized
'Stack after pushing double: [1.0, 7.0]
Operator recognized
Number21.0
Number17.0
[7.0]
Double recognized
'Stack after pushing double: [1.0, 7.0]
Operator recognized
Number21.0
Number17.0
[7.0]
Double recognized
'Stack after pushing double: [1.0, 7.0]
Operator recognized
Number21.0
Number17.0
[7.0]
Double recognized
'Stack after pushing double: [1.0, 7.0]
Operator recognized
Number21.0
Number17.0
[7.0]
Double recognized
'Stack after pushing double: [1.0, 7.0]
Operator recognized
Number21.0
Number17.0
[7.0]
Double recognized
'Stack after pushing double: [1.0, 7.0]
Operator recognized
Number21.0
Number17.0
[7.0]
Double recognized
Output queue: [14.0]
Character recognized
Operator recognized
Operator stack: [/]
Double recognized
Output queue: [14.0, 2.0]
Operator stack not empty
Postfix: [14.0, 2.0, /]
Double recognized
#Stack after pushing double: [14.0]
Double recognized
(Stack after pushing double: [2.0, 14.0]
Operator recognized
Number22.0
Number114.0
[7.0]
Double recognized
Output queue: [70.0]
Character recognized
Operator recognized
Operator stack: [/]
Double recognized
Output queue: [70.0, 5.0]
Character recognized
Operator recognized
Output queue: [70.0, 5.0, /]
Operator stack: [/]
Double recognized
"Output queue: [70.0, 5.0, /, 2.0]
Operator stack not empty
 Postfix: [70.0, 5.0, /, 2.0, /]
Double recognized
#Stack after pushing double: [70.0]
Double recognized
(Stack after pushing double: [5.0, 70.0]
Operator recognized
Number25.0
Number170.0
[14.0]
Double recognized
(Stack after pushing double: [2.0, 14.0]
Operator recognized
Number22.0
Number114.0
[7.0]
Double recognized
Output queue: [1.0]
Character recognized
Operator recognized
Operator stack: [+]
Double recognized
Output queue: [1.0, 2.0]
Character recognized
Operator recognized
Operator stack: [*, +]
Double recognized
Output queue: [1.0, 2.0, 3.0]
Operator stack not empty
Operator stack not empty
Postfix: [1.0, 2.0, 3.0, *, +]
Double recognized
"Stack after pushing double: [1.0]
Double recognized
'Stack after pushing double: [2.0, 1.0]
Double recognized
,Stack after pushing double: [3.0, 2.0, 1.0]
Operator recognized
Number23.0
Number12.0
[6.0, 1.0]
Operator recognized
Number26.0
Number11.0
[7.0]
Double recognized
Output queue: [0.0]
Character recognized
Operator recognized
Operator stack: [-]
Double recognized
Output queue: [0.0, 1.0]
Character recognized
Operator recognized
Output queue: [0.0, 1.0, -]
Operator stack: [-]
Double recognized
!Output queue: [0.0, 1.0, -, 2.0]
Character recognized
Operator recognized
Operator stack: [*, -]
Double recognized
&Output queue: [0.0, 1.0, -, 2.0, 3.0]
Character recognized
Operator recognized
)Output queue: [0.0, 1.0, -, 2.0, 3.0, *]
,Output queue: [0.0, 1.0, -, 2.0, 3.0, *, -]
Operator stack: [+]
Double recognized
1Output queue: [0.0, 1.0, -, 2.0, 3.0, *, -, 4.0]
Character recognized
Operator recognized
Operator stack: [*, +]
Double recognized
6Output queue: [0.0, 1.0, -, 2.0, 3.0, *, -, 4.0, 5.0]
Character recognized
Operator recognized
9Output queue: [0.0, 1.0, -, 2.0, 3.0, *, -, 4.0, 5.0, *]
<Output queue: [0.0, 1.0, -, 2.0, 3.0, *, -, 4.0, 5.0, *, +]
Operator stack: [-]
Double recognized
AOutput queue: [0.0, 1.0, -, 2.0, 3.0, *, -, 4.0, 5.0, *, +, 6.0]
Operator stack not empty
?Postfix: [0.0, 1.0, -, 2.0, 3.0, *, -, 4.0, 5.0, *, +, 6.0, -]
Double recognized
"Stack after pushing double: [0.0]
Double recognized
'Stack after pushing double: [1.0, 0.0]
Operator recognized
Number21.0
Number10.0
[-1.0]
Double recognized
(Stack after pushing double: [2.0, -1.0]
Double recognized
-Stack after pushing double: [3.0, 2.0, -1.0]
Operator recognized
Number23.0
Number12.0
[6.0, -1.0]
Operator recognized
Number26.0
Number1-1.0
[-7.0]
Double recognized
(Stack after pushing double: [4.0, -7.0]
Double recognized
-Stack after pushing double: [5.0, 4.0, -7.0]
Operator recognized
Number25.0
Number14.0
[20.0, -7.0]
Operator recognized
Number220.0
Number1-7.0
[13.0]
Double recognized
(Stack after pushing double: [6.0, 13.0]
Operator recognized
Number26.0
Number113.0
[7.0]
Double recognized
Output queue: [2.0]
Character recognized
Operator recognized
Operator stack: [*]
Double recognized
Output queue: [2.0, 4.0]
Character recognized
Operator recognized
Output queue: [2.0, 4.0, *]
Operator stack: [-]
Double recognized
!Output queue: [2.0, 4.0, *, 1.0]
Operator stack not empty
Postfix: [2.0, 4.0, *, 1.0, -]
Double recognized
"Stack after pushing double: [2.0]
Double recognized
'Stack after pushing double: [4.0, 2.0]
Operator recognized
Number24.0
Number12.0
[8.0]
Double recognized
'Stack after pushing double: [1.0, 8.0]
Operator recognized
Number21.0
Number18.0
[7.0]
Double recognized
Output queue: [15.0]
Character recognized
Operator recognized
Operator stack: [-]
Double recognized
Output queue: [15.0, 2.0]
Character recognized
Operator recognized
Operator stack: [*, -]
Double recognized
Output queue: [15.0, 2.0, 4.0]
Operator stack not empty
Operator stack not empty
 Postfix: [15.0, 2.0, 4.0, *, -]
Double recognized
#Stack after pushing double: [15.0]
Double recognized
(Stack after pushing double: [2.0, 15.0]
Double recognized
-Stack after pushing double: [4.0, 2.0, 15.0]
Operator recognized
Number24.0
Number12.0
[8.0, 15.0]
Operator recognized
Number28.0
Number115.0
[7.0]
Double recognized
Output queue: [18.0]
Character recognized
Operator recognized
Operator stack: [/]
Double recognized
Output queue: [18.0, 2.0]
Character recognized
Operator recognized
Output queue: [18.0, 2.0, /]
Operator stack: [-]
Double recognized
"Output queue: [18.0, 2.0, /, 2.0]
Operator stack not empty
 Postfix: [18.0, 2.0, /, 2.0, -]
Double recognized
#Stack after pushing double: [18.0]
Double recognized
(Stack after pushing double: [2.0, 18.0]
Operator recognized
Number22.0
Number118.0
[9.0]
Double recognized
'Stack after pushing double: [2.0, 9.0]
Operator recognized
Number22.0
Number19.0
[7.0]
Double recognized
Output queue: [11.0]
Character recognized
Operator recognized
Operator stack: [-]
Double recognized
Output queue: [11.0, 8.0]
Character recognized
Operator recognized
Operator stack: [/, -]
Double recognized
Output queue: [11.0, 8.0, 2.0]
Operator stack not empty
Operator stack not empty
 Postfix: [11.0, 8.0, 2.0, /, -]
Double recognized
#Stack after pushing double: [11.0]
Double recognized
(Stack after pushing double: [8.0, 11.0]
Double recognized
-Stack after pushing double: [2.0, 8.0, 11.0]
Operator recognized
Number22.0
Number18.0
[4.0, 11.0]
Operator recognized
Number24.0
Number111.0
[7.0]
Double recognized
Output queue: [10.0]
Character recognized
Operator recognized
Operator stack: [+]
Double recognized
Output queue: [10.0, 2.0]
Character recognized
Operator recognized
Output queue: [10.0, 2.0, +]
Operator stack: [-]
Double recognized
"Output queue: [10.0, 2.0, +, 5.0]
Operator stack not empty
 Postfix: [10.0, 2.0, +, 5.0, -]
Double recognized
#Stack after pushing double: [10.0]
Double recognized
(Stack after pushing double: [2.0, 10.0]
Operator recognized
Number22.0
Number110.0
[12.0]
Double recognized
(Stack after pushing double: [5.0, 12.0]
Operator recognized
Number25.0
Number112.0
[7.0]
Double recognized
Output queue: [10.0]
Character recognized
Operator recognized
Operator stack: [-]
Double recognized
Output queue: [10.0, 5.0]
Character recognized
Operator recognized
Output queue: [10.0, 5.0, -]
Operator stack: [+]
Double recognized
"Output queue: [10.0, 5.0, -, 2.0]
Operator stack not empty
 Postfix: [10.0, 5.0, -, 2.0, +]
Double recognized
#Stack after pushing double: [10.0]
Double recognized
(Stack after pushing double: [5.0, 10.0]
Operator recognized
Number25.0
Number110.0
[5.0]
Double recognized
'Stack after pushing double: [2.0, 5.0]
Operator recognized
Number22.0
Number15.0
[7.0]
Double recognized
Output queue: [70.0]
Character recognized
Operator recognized
Operator stack: [*]
Double recognized
Output queue: [70.0, 4.0]
Character recognized
Operator recognized
Output queue: [70.0, 4.0, *]
Operator stack: [/]
Double recognized
#Output queue: [70.0, 4.0, *, 40.0]
Operator stack not empty
!Postfix: [70.0, 4.0, *, 40.0, /]
Double recognized
#Stack after pushing double: [70.0]
Double recognized
(Stack after pushing double: [4.0, 70.0]
Operator recognized
Number24.0
Number170.0
[280.0]
Double recognized
*Stack after pushing double: [40.0, 280.0]
Operator recognized
Number240.0
Number1280.0
[7.0]
Double recognized
Output queue: [70.0]
Character recognized
Operator recognized
Operator stack: [/]
Double recognized
Output queue: [70.0, 5.0]
Character recognized
Operator recognized
Output queue: [70.0, 5.0, /]
Operator stack: [*]
Double recognized
"Output queue: [70.0, 5.0, /, 0.5]
Operator stack not empty
 Postfix: [70.0, 5.0, /, 0.5, *]
Double recognized
#Stack after pushing double: [70.0]
Double recognized
(Stack after pushing double: [5.0, 70.0]
Operator recognized
Number25.0
Number170.0
[14.0]
Double recognized
(Stack after pushing double: [0.5, 14.0]
Operator recognized
Number20.5
Number114.0
[7.0]
Double recognized
Output queue: [100.0]
Character recognized
Operator recognized
Operator stack: [/]
Double recognized
Output queue: [100.0, 10.0]
Character recognized
Operator recognized
Output queue: [100.0, 10.0, /]
Operator stack: [-]
Double recognized
$Output queue: [100.0, 10.0, /, 9.0]
Character recognized
Operator recognized
Operator stack: [/, -]
Double recognized
)Output queue: [100.0, 10.0, /, 9.0, 3.0]
Operator stack not empty
Operator stack not empty
*Postfix: [100.0, 10.0, /, 9.0, 3.0, /, -]
Double recognized
$Stack after pushing double: [100.0]
Double recognized
*Stack after pushing double: [10.0, 100.0]
Operator recognized
Number210.0
Number1100.0
[10.0]
Double recognized
(Stack after pushing double: [9.0, 10.0]
Double recognized
-Stack after pushing double: [3.0, 9.0, 10.0]
Operator recognized
Number23.0
Number19.0
[3.0, 10.0]
Operator recognized
Number23.0
Number110.0
[7.0]
Double recognized
Output queue: [3.14159]
Postfix: [3.14159]
Double recognized
&Stack after pushing double: [3.14159]
Double recognized
Output queue: [7.0]
Postfix: [7.0]
Double recognized
"Stack after pushing double: [7.0]
Double recognized
&Stack after pushing double: [3.14159]
Double recognized
"Stack after pushing double: [7.0]
	Double recognized
	#Stack after pushing double: [28.0]
	Double recognized
	(Stack after pushing double: [1.0, 28.0]
	Double recognized
	-Stack after pushing double: [4.0, 1.0, 28.0]
	Operator recognized
	Number24.0
	Number11.0
	[0.25, 28.0]
	Operator recognized
	Number20.25
	Number128.0
	[7.0]
	Double recognized
	"Stack after pushing double: [3.0]
	Double recognized
	'Stack after pushing double: [1.0, 3.0]
	Operator recognized
	Number21.0
	Number13.0
	[4.0]
	Double recognized
	(Stack after pushing double: [10.0, 4.0]
	Double recognized
	-Stack after pushing double: [3.0, 10.0, 4.0]
	Operator recognized
	Number23.0
	Number110.0
	[7.0, 4.0]
	Operator recognized
	Number27.0
	Number14.0
	[28.0]
	Double recognized
	(Stack after pushing double: [4.0, 28.0]
	Operator recognized
	Number24.0
	Number128.0
	[7.0]
	Double recognized
	"Stack after pushing double: [7.0]
	Double recognized
	'Stack after pushing double: [1.0, 7.0]
	Operator recognized
	Number21.0
	Number17.0
	[7.0]
	Double recognized
	'Stack after pushing double: [1.0, 7.0]
	Operator recognized
	Number21.0
	Number17.0
	[7.0]
	Double recognized
	'Stack after pushing double: [0.0, 7.0]
	Operator recognized
	Number20.0
	Number17.0
	[7.0]
	Double recognized
	'Stack after pushing double: [0.0, 7.0]
	Operator recognized
	Number20.0
	Number17.0
	[7.0]

Double recognized

"Stack after pushing double: [9.0]

Double recognized

'Stack after pushing double: [2.0, 9.0]

Operator recognized

Number22.0

Number19.0

[7.0]

Double recognized

#Stack after pushing double: [11.0]

Double recognized

(Stack after pushing double: [4.0, 11.0]

Operator recognized

Number24.0

Number111.0

[7.0]

Double recognized

#Stack after pushing double: [15.0]

Double recognized

(Stack after pushing double: [6.0, 15.0]

Operator recognized

Number26.0

Number115.0

[9.0]

Double recognized

'Stack after pushing double: [2.0, 9.0]

Operator recognized

Number22.0

Number19.0

[7.0]

Double recognized

#Stack after pushing double: [15.0]

Double recognized

)Stack after pushing double: [10.0, 15.0]

Double recognized

.Stack after pushing double: [2.0, 10.0, 15.0]

Operator recognized

Number22.0

Number110.0

[8.0, 15.0]

Operator recognized

Number28.0

Number115.0

[7.0]
Double recognized
"Stack after pushing double: [3.5]
Double recognized
'Stack after pushing double: [2.0, 3.5]
Operator recognized
Number22.0
Number13.5
[7.0]
Double recognized
#Stack after pushing double: [1.75]
Double recognized
(Stack after pushing double: [2.0, 1.75]
Double recognized
-Stack after pushing double: [2.0, 2.0, 1.75]
Operator recognized
Number22.0
Number12.0
[4.0, 1.75]
Operator recognized
Number24.0
Number11.75
[7.0]
Double recognized
#Stack after pushing double: [1.75]
Double recognized
(Stack after pushing double: [2.0, 1.75]
Operator recognized
Number22.0
Number11.75
[3.5]
Double recognized
'Stack after pushing double: [2.0, 3.5]
Operator recognized
Number22.0
Number13.5
[7.0]
Operator recognized
Too small stack: []
Double recognized
#Stack after pushing double: [21.0]
Double recognized
(Stack after pushing double: [3.0, 21.0]
Operator recognized
Number23.0
Number121.0
[7.0]
Double recognized
#Stack after pushing double: [70.0]
Double recognized
(Stack after pushing double: [5.0, 70.0]
Operator recognized
Number25.0
Number170.0
[14.0]
Double recognized
(Stack after pushing double: [2.0, 14.0]
Operator recognized
Number22.0
Number114.0
[7.0]
Double recognized
#Stack after pushing double: [70.0]
Double recognized
*Stack after pushing double: [100.0, 70.0]
Double recognized
0Stack after pushing double: [10.0, 100.0, 70.0]
Operator recognized
Number210.0
Number1100.0
[10.0, 70.0]
Operator recognized
Number210.0
Number170.0
[7.0]
Double recognized
"Stack after pushing double: [6.0]
Double recognized
'Stack after pushing double: [1.0, 6.0]
Operator recognized
Number21.0
Number16.0
[7.0]
Double recognized
"Stack after pushing double: [0.0]
Double recognized
'Stack after pushing double: [7.0, 0.0]
Operator recognized
Number27.0
Number10.0
[7.0]
Double recognized
"Stack after pushing double: [2.0]
Double recognized
'Stack after pushing double: [3.0, 2.0]
Double recognized
,Stack after pushing double: [2.0, 3.0, 2.0]
Operator recognized
Number22.0
Number13.0
[5.0, 2.0]
Operator recognized
Number25.0
Number12.0
[7.0]
Double recognized
"Stack after pushing double: [2.0]
Double recognized
'Stack after pushing double: [2.0, 2.0]
Double recognized
,Stack after pushing double: [2.0, 2.0, 2.0]
Double recognized
1Stack after pushing double: [1.0, 2.0, 2.0, 2.0]
Operator recognized
Number21.0
Number12.0
[3.0, 2.0, 2.0]
Operator recognized
Number23.0
Number12.0
[5.0, 2.0]
Operator recognized
Number25.0
Number12.0
[7.0]
Double recognized
"Stack after pushing double: [1.0]
Double recognized
'Stack after pushing double: [1.0, 1.0]
Double recognized
,Stack after pushing double: [1.0, 1.0, 1.0]
Double recognized
1Stack after pushing double: [1.0, 1.0, 1.0, 1.0]
Double recognized
6Stack after pushing double: [1.0, 1.0, 1.0, 1.0, 1.0]
Double recognized
;Stack after pushing double: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0]
Double recognized
@Stack after pushing double: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]
Operator recognized
Number21.0
Number11.0
[2.0, 1.0, 1.0, 1.0, 1.0, 1.0]
Operator recognized
Number22.0
Number11.0
[3.0, 1.0, 1.0, 1.0, 1.0]
Operator recognized
Number23.0
Number11.0
[4.0, 1.0, 1.0, 1.0]
Operator recognized
Number24.0
Number11.0
[5.0, 1.0, 1.0]
Operator recognized
Number25.0
Number11.0
[6.0, 1.0]
Operator recognized
Number26.0
Number11.0
[7.0]
Double recognized
"Stack after pushing double: [2.0]
Double recognized
'Stack after pushing double: [2.0, 2.0]
Operator recognized
Number22.0
Number12.0
[4.0]
Double recognized
'Stack after pushing double: [2.0, 4.0]
Double recognized
,Stack after pushing double: [1.0, 2.0, 4.0]
Operator recognized
Number21.0
Number12.0
[3.0, 4.0]
Operator recognized
Number23.0
Number14.0
[7.0]
